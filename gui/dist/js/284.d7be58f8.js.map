{"version":3,"file":"js/284.d7be58f8.js","mappings":"2QACEA,EAAAA,EAAAA,IAAqBC,E,2OC8GvB,MAAMC,GAAcC,EAAAA,EAAAA,KACpBD,EAAYE,eAGZ,MAAM,SAAEC,IAAaC,EAAAA,EAAAA,IAAYJ,GAE3BK,EAAeA,KACnBL,EAAYK,eACZC,EAAAA,GAAUC,QAAQ,SAAS,EAIvBC,EAAkB,CACtBC,UAAW,CACTC,KAAM,0BACNC,OAAQ,gCACRC,OAAQ,GACRC,OAAQ,CACNC,YAAa,EACbC,UAAW,IACXC,YAAa,EACbC,gBAAiB,OAOjBC,EAAiBA,KACrBlB,EAAYG,SAAWgB,KAAKC,MAAMD,KAAKE,UAAUb,IACjDF,EAAAA,GAAUgB,KAAK,UAAU,E,0/FCvI3B,MAAMC,GAA2B,OAAgB,EAAQ,CAAC,CAAC,YAAY,qBAEvE,QFDA,GACEb,KAAM,MACNc,WAAY,CACVC,kBAAiBA,IGHrB,MAAM,GAA2B,OAAgB,EAAQ,CAAC,CAAC,SAASC,KAEpE,O,oECNO,MAAMzB,GAAiB0B,EAAAA,EAAAA,IAAY,SAAU,CAClDC,MAAOA,KAAA,CACLzB,SAAU,CACRM,UAAW,CAAEE,OAAQ,GAAIC,OAAQ,GAAIF,KAAK,GAAIG,OAAQ,CAAEC,YAAa,EAAKC,UAAW,KAAMC,YAAa,EAAGC,gBAAiB,MAC5HY,WAAY,CAAElB,OAAQ,GAAIC,OAAQ,GAAIF,KAAK,OAG/CoB,QAAS,CACP5B,YAAAA,GACE,MAAM6B,EAAQC,aAAaC,QAAQ,YAC/BF,IACFG,KAAK/B,SAAWgB,KAAKC,MAAMW,GAE/B,EACA1B,YAAAA,GACE2B,aAAaG,QAAQ,WAAYhB,KAAKE,UAAUa,KAAK/B,UACvD,I","sources":["webpack://chengshe_homework/./src/views/AllSettings.vue","webpack://chengshe_homework/./src/components/SettingsContainer.vue","webpack://chengshe_homework/./src/components/SettingsContainer.vue?e540","webpack://chengshe_homework/./src/views/AllSettings.vue?4af9","webpack://chengshe_homework/./stores/config.js"],"sourcesContent":["<template>\r\n  <SettingsContainer />\r\n</template>\r\n\r\n<script>\r\nimport SettingsContainer from '../components/SettingsContainer.vue';\r\n\r\nexport default {\r\n  name: 'App',\r\n  components: {\r\n    SettingsContainer\r\n  }\r\n}\r\n</script>\r\n\r\n<style>\r\n#app {\r\n  font-family: Avenir, Helvetica, Arial, sans-serif;\r\n  -webkit-font-smoothing: antialiased;\r\n  -moz-osx-font-smoothing: grayscale;\r\n  text-align: center;\r\n  color: #2c3e50;\r\n  margin-top: 0px;\r\n}\r\n</style>\r\n","<template>\r\n    <div class=\"SettingsContainer\">\r\n      <!-- 头部标题 -->\r\n      <h1 class=\"settings-title\">全局设置</h1>\r\n  \r\n      <div class=\"setting-content\">\r\n        <div class=\"ai-basicsettings\">\r\n          <h1 class=\"settings-smallTitle\">基础ai设置</h1>\r\n          <el-form \r\n            ref=\"settingsForm\"\r\n            :model=\"settings\"\r\n            label-position=\"left\"\r\n            label-width=\"180px\"\r\n            class=\"settings-form\"\r\n          >\r\n            <!-- 文本大模型配置 -->\r\n            <el-card class=\"setting-section\">\r\n              <template #header>\r\n                <div class=\"section-title\">硅基流动平台信息</div>\r\n              </template>\r\n              \r\n              <!-- 隐藏模型名称选项（直接删除该表单项） -->\r\n              \r\n              <el-form-item label=\"API 地址\" prop=\"textModel.apiUrl\">\r\n                <el-input \r\n                  v-model=\"settings.textModel.apiUrl\"\r\n                  placeholder=\"https://api.text-model.com/v1\"\r\n                  disabled\r\n                />\r\n              </el-form-item>\r\n  \r\n              <el-form-item label=\"API 密钥\" prop=\"textModel.apiKey\">\r\n                <el-input\r\n                  v-model=\"settings.textModel.apiKey\"\r\n                  type=\"password\"\r\n                  show-password\r\n                  placeholder=\"输入API密钥\"\r\n                />\r\n              </el-form-item>\r\n            </el-card>\r\n            \r\n            <!-- 删除图像大模型配置（整段删除） -->\r\n            \r\n          </el-form>\r\n        </div>\r\n        <div class=\"function-settings\">\r\n          <h1 class=\"settings-smallTitle\">功能设置</h1>\r\n          <el-form \r\n            ref=\"settingsForm\"\r\n            :model=\"settings\"\r\n            label-position=\"left\"\r\n            label-width=\"180px\"\r\n            class=\"settings-form\"\r\n          >\r\n            <!-- 续写功能设置（无需修改） -->\r\n            <el-card class=\"setting-section\">\r\n              <template #header>\r\n                <div class=\"section-title\">文本生成功能设置</div>\r\n              </template>\r\n  \r\n              <el-form-item label=\"温度 (0-2)\" prop=\"params.temperature\">\r\n                <el-slider\r\n                  v-model=\"settings.textModel.params.temperature\"\r\n                  :min=\"0\"\r\n                  :max=\"2\"\r\n                  :step=\"0.1\"\r\n                  show-input\r\n                />\r\n              </el-form-item>\r\n  \r\n              <el-form-item label=\"最大Token数\" prop=\"params.maxTokens\">\r\n                <el-input-number\r\n                  v-model=\"settings.textModel.params.maxTokens\"\r\n                  :min=\"100\"\r\n                  :max=\"4000\"\r\n                  :step=\"100\"\r\n                />\r\n              </el-form-item>\r\n  \r\n              <el-form-item label=\"每次续写数量 (1-5)\" prop=\"params.generateNum\">\r\n                <el-input-number\r\n                  v-model=\"settings.textModel.params.generateNum\"\r\n                  :min=\"1\"\r\n                  :max=\"5\"\r\n                />\r\n              </el-form-item>\r\n\r\n              <el-form-item label=\"单次续写字数\" prop=\"params.generateTextNum\">\r\n                <el-input-number\r\n                  v-model=\"settings.textModel.params.generateTextNum\"\r\n                  :min=\"1\"\r\n                  :max=\"500\"\r\n                />\r\n              </el-form-item>\r\n            </el-card>\r\n          </el-form>\r\n        </div>\r\n      </div>\r\n      <!-- 操作按钮 -->\r\n      <div class=\"action-buttons\">\r\n        <el-button type=\"primary\" @click=\"saveSettings\">保存配置</el-button>\r\n        <el-button @click=\"resetToDefault\">恢复默认</el-button>\r\n      </div>\r\n  </div>\r\n</template>\r\n  \r\n<script setup>\r\nimport { ElMessage } from 'element-plus'\r\nimport { useConfigStore } from '../../stores/config'\r\nimport { storeToRefs } from 'pinia'\r\n\r\nconst configStore = useConfigStore()\r\nconfigStore.loadSettings()\r\n\r\n// 直接绑定 Store 中的状态（保持响应式）\r\nconst { settings } = storeToRefs(configStore)\r\n\r\nconst saveSettings = () => {\r\n  configStore.saveSettings();\r\n  ElMessage.success('配置保存成功')\r\n}\r\n\r\n// ** 修改默认配置参数 **\r\nconst defaultSettings = {\r\n  textModel: {\r\n    name: \"deepseek-ai/DeepSeek-V3\",  // 设置默认模型名称\r\n    apiUrl: 'https://api.siliconflow.cn/v1',  // 设置默认API地址\r\n    apiKey: '',\r\n    params: {\r\n      temperature: 1.0,\r\n      maxTokens: 150,\r\n      generateNum: 3,\r\n      generateTextNum: 100,\r\n    },\r\n  },\r\n  // 移除 imageModel 配置\r\n}\r\n\r\n// 重置默认\r\nconst resetToDefault = () => {\r\n  configStore.settings = JSON.parse(JSON.stringify(defaultSettings));\r\n  ElMessage.info('已恢复默认配置')\r\n}\r\n</script>\r\n  \r\n  <style scoped>\r\n  .SettingsContainer {\r\n    max-width: 1400px;\r\n    margin: 20px auto;\r\n    padding: 0px;\r\n  }\r\n  \r\n  .settings-title {\r\n    text-align: center;\r\n    color: #2c3e50;\r\n    margin-bottom: 0px;\r\n  }\r\n\r\n  .settings-smallTitle {\r\n    text-align: center;\r\n    color: #2c3e50;\r\n    margin-bottom: 20px;\r\n    font-size: 24px;\r\n  }\r\n  \r\n  .setting-section {\r\n    margin-bottom: 20px;\r\n  }\r\n\r\n  .setting-content {\r\n    display: flex;\r\n    gap: 40px; \r\n  }\r\n\r\n  .ai-basicsettings,\r\n  .function-settings {\r\n    flex: 1; /* 让两个区块均分宽度 */\r\n    min-width: 0; /* 防止内容溢出 */\r\n  }\r\n  \r\n  .section-title {\r\n    font-size: 16px;\r\n    font-weight: 600;\r\n    color: #34495e;\r\n  }\r\n  \r\n  .action-buttons {\r\n    margin-top: 30px;\r\n    text-align: center;\r\n  }\r\n  \r\n  :deep(.el-form-item__label) {\r\n    font-weight: 500;\r\n    color: #4a4a4a;\r\n  }\r\n  \r\n  :deep(.el-card__header) {\r\n    background-color: #f8f9fa;\r\n  }\r\n  </style>","import script from \"./SettingsContainer.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./SettingsContainer.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./SettingsContainer.vue?vue&type=style&index=0&id=2c07967e&scoped=true&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-2c07967e\"]])\n\nexport default __exports__","import { render } from \"./AllSettings.vue?vue&type=template&id=152d57b4\"\nimport script from \"./AllSettings.vue?vue&type=script&lang=js\"\nexport * from \"./AllSettings.vue?vue&type=script&lang=js\"\n\nimport \"./AllSettings.vue?vue&type=style&index=0&id=152d57b4&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","// stores/config.js\r\nimport { defineStore } from 'pinia'\r\n\r\nexport const useConfigStore = defineStore('config', {\r\n  state: () => ({\r\n    settings: {\r\n      textModel: { apiUrl: '', apiKey: '' ,name:\"\" ,params: { temperature: 1.0 ,maxTokens: 2048 ,generateNum: 3 ,generateTextNum: 100}},\r\n      imageModel: { apiUrl: '', apiKey: '' ,name:\"\"},\r\n    }\r\n  }),\r\n  actions: {\r\n    loadSettings() {\r\n      const saved = localStorage.getItem('settings')\r\n      if (saved) {\r\n        this.settings = JSON.parse(saved)\r\n      }\r\n    },\r\n    saveSettings() {\r\n      localStorage.setItem('settings', JSON.stringify(this.settings))\r\n    }\r\n  }\r\n})"],"names":["_createBlock","_component_SettingsContainer","configStore","useConfigStore","loadSettings","settings","storeToRefs","saveSettings","ElMessage","success","defaultSettings","textModel","name","apiUrl","apiKey","params","temperature","maxTokens","generateNum","generateTextNum","resetToDefault","JSON","parse","stringify","info","__exports__","components","SettingsContainer","render","defineStore","state","imageModel","actions","saved","localStorage","getItem","this","setItem"],"sourceRoot":""}