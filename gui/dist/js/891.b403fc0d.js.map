{"version":3,"file":"js/891.b403fc0d.js","mappings":"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","sources":["webpack://chengshe_homework/./node_modules/core-js/modules/es.iterator.find.js","webpack://chengshe_homework/./src/views/UserMain.vue","webpack://chengshe_homework/./src/components/YanxxDialog.vue","webpack://chengshe_homework/./src/components/HistoryPanel.vue","webpack://chengshe_homework/./src/components/HistoryPanel.vue?950e","webpack://chengshe_homework/./src/components/YanxxDialog.vue?41a0","webpack://chengshe_homework/./src/views/UserMain.vue?8759"],"sourcesContent":["'use strict';\nvar $ = require('../internals/export');\nvar iterate = require('../internals/iterate');\nvar aCallable = require('../internals/a-callable');\nvar anObject = require('../internals/an-object');\nvar getIteratorDirect = require('../internals/get-iterator-direct');\n\n// `Iterator.prototype.find` method\n// https://tc39.es/ecma262/#sec-iterator.prototype.find\n$({ target: 'Iterator', proto: true, real: true }, {\n  find: function find(predicate) {\n    anObject(this);\n    aCallable(predicate);\n    var record = getIteratorDirect(this);\n    var counter = 0;\n    return iterate(record, function (value, stop) {\n      if (predicate(value, counter++)) return stop(value);\n    }, { IS_RECORD: true, INTERRUPTED: true }).result;\n  }\n});\n","<template>\r\n  <YanxxDialog style=\"flex: 1;height:100%\" />\r\n</template>\r\n\r\n<script>\r\nimport YanxxDialog from '../components/YanxxDialog.vue';\r\n\r\nexport default {\r\n  name: 'App',\r\n  components: {\r\n    YanxxDialog\r\n  }\r\n}\r\n</script>\r\n\r\n<style>\r\nhtml, body {\r\n  height: 100%;\r\n  margin: 0;\r\n  padding: 0;\r\n}\r\n\r\n#app {\r\n  font-family: Avenir, Helvetica, Arial, sans-serif;\r\n  -webkit-font-smoothing: antialiased;\r\n  -moz-osx-font-smoothing: grayscale;\r\n  text-align: center;\r\n  color: #2c3e50;\r\n  margin-top: 0px;\r\n}\r\n</style>\r\n","<template>\r\n    <div class=\"chat-layout\">\r\n        <!-- 历史记录面板 -->\r\n        <HistoryPanel \r\n            :messages=\"messages\"\r\n            :current-session-id=\"currentSessionId\"\r\n            @session-selected=\"loadSession\"\r\n            @session-created=\"createSession\"\r\n            @session-deleted=\"handleSessionDeleted\"\r\n            @history-cleared=\"handleHistoryCleared\"\r\n            @toggle-collapse=\"handleHistoryToggle\"\r\n        />\r\n        \r\n        <!-- 对话容器 -->\r\n        <div class=\"chat-container\" :style=\"{ width: containerWidth, height: containerHeight }\">\r\n            <div ref=\"messagesContainer\" class=\"messages\">\r\n                <div v-for=\"(msg, index) in messages\" :key=\"index\" :class=\"['message', msg.sender]\">\r\n                    <div v-if=\"msg.sender === 'user'\" class=\"message-content\">\r\n                        <span class=\"username\">我</span> {{ msg.content }}\r\n                        <span class=\"timestamp\">{{ formatTime(msg.timestamp) }}</span>\r\n                    </div>\r\n                    <div v-else class=\"message-content\">\r\n                        <!-- 新增语音播放按钮 -->\r\n                        <button v-if=\"!msg.loading\" @click=\"playVoice(msg)\" class=\"voice-play-btn\">\r\n                            <i class=\"fas fa-volume-up\"></i>\r\n                        </button>\r\n                        \r\n                        <span class=\"username\">严小希</span>\r\n                        <span v-if=\"msg.loading\" class=\"loading-dots\">思考中</span>\r\n                        <span v-else>{{ msg.content }}</span>\r\n                        <span class=\"timestamp\">{{ formatTime(msg.timestamp) }}</span>\r\n                        \r\n                        <!-- AI续写跳转条 -->\r\n                        <div v-if=\"!msg.loading && msg.showContinuation\" class=\"continuation-bar\">\r\n                            <div class=\"divider\"></div>\r\n                            <button @click=\"gotoContinuation\" class=\"continuation-btn\">点击此处让小希来帮你续写 -></button>\r\n                        </div>\r\n\r\n                        <!-- AI润色跳转条 -->\r\n                        <div v-if=\"!msg.loading && msg.showPolishment\" class=\"continuation-bar\">\r\n                            <div class=\"divider\"></div>\r\n                            <button @click=\"gotoPolishment\" class=\"continuation-btn\">点击此处让小希来帮你润色 -></button>\r\n                        </div>\r\n\r\n                        <!-- AI摘抄跳转条 -->\r\n                        <div v-if=\"!msg.loading && msg.showExtraction\" class=\"continuation-bar\">\r\n                            <div class=\"divider\"></div>\r\n                            <button @click=\"gotoExtraction\" class=\"continuation-btn\">点击此处让小希来帮你摘抄 -></button>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n            <!-- 图片预览区域 - 在输入框上方 -->    \r\n            <div v-if=\"selectedImage\" class=\"image-preview-area\">\r\n                <div class=\"image-preview-header\">\r\n                    <span class=\"image-preview-title\">已选择图片</span>\r\n                    <button @click=\"removeImage\" class=\"remove-image-btn\" title=\"移除图片\">\r\n                        <i class=\"fas fa-times\"></i>\r\n                    </button>\r\n                </div>\r\n                <div class=\"image-preview-content\">\r\n                    <div @click=\"showImagePreview\" class=\"image-thumbnail-container\">\r\n                        <img :src=\"`data:${selectedImage.type};base64,${selectedImage.data}`\" \r\n                             :alt=\"selectedImage.name\" \r\n                             class=\"image-thumbnail\">\r\n                        <div class=\"image-overlay\">\r\n                            <i class=\"fas fa-eye\"></i>\r\n                            <span class=\"image-filename\">{{ selectedImage.name }}</span>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n            <!-- 图片全屏预览遮罩 -->\r\n            <div v-if=\"showPreview\" @click=\"hideImagePreview\" class=\"image-preview-overlay\">\r\n                <div class=\"image-preview-modal\" @click.stop>\r\n                    <div class=\"image-preview-modal-header\">\r\n                        <span class=\"image-preview-modal-title\">{{ selectedImage?.name }}</span>\r\n                        <button @click=\"hideImagePreview\" class=\"close-preview-btn\">\r\n                            <i class=\"fas fa-times\"></i>\r\n                        </button>\r\n                    </div>\r\n                    <div class=\"image-preview-modal-content\">\r\n                        <img v-if=\"selectedImage\" \r\n                             :src=\"`data:${selectedImage.type};base64,${selectedImage.data}`\" \r\n                             :alt=\"selectedImage.name\" \r\n                             class=\"image-preview-full\">\r\n                    </div>\r\n                </div>\r\n            </div>  \r\n\r\n            <div class=\"input-area\" :style=\"{ width: inputAreaWidth }\">\r\n                <textarea v-model=\"userInput\" placeholder=\"输入你的问题...\" @keydown.enter.exact.prevent=\"sendMessage\"\r\n                    :disabled=\"isLoading\" rows=\"2\"></textarea>\r\n                <div class=\"input-buttons\">\r\n                    <!-- 图片输入按钮 -->\r\n                    <button @click=\"triggerImageUpload\" :disabled=\"isLoading\" class=\"image-upload-btn\" title=\"上传图片进行OCR识别\">\r\n                        <i class=\"fas fa-image\"></i>\r\n                    </button>\r\n                    <input ref=\"imageInput\" type=\"file\" accept=\"image/*\" @change=\"handleImageUpload\" style=\"display: none;\">\r\n                    <button @click=\"sendMessage\" :disabled=\"isLoading || !userInput.trim()\">\r\n                        {{ isLoading ? '发送中...' : '发送' }}\r\n                    </button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\nimport { ref, reactive, watch, nextTick, onMounted, computed } from 'vue';\r\nimport { useRouter } from 'vue-router';\r\nimport { useConfigStore } from '../../stores/config';\r\nimport HistoryPanel from './HistoryPanel.vue';\r\n\r\nexport default {\r\n    components: {\r\n        HistoryPanel\r\n    },\r\n    props: {\r\n        width: {\r\n            type: String,\r\n            default: '100%'\r\n        },\r\n        height: {\r\n            type: String,\r\n            default: '100%'\r\n        }\r\n    },\r\n    setup(props) {\r\n        const router = useRouter();\r\n        const configStore = useConfigStore();\r\n        const config = ref({\r\n            ModelName: configStore.settings.textModel.name,\r\n            apiKey: configStore.settings.textModel.apiKey,\r\n            apiUrl: configStore.settings.textModel.apiUrl,\r\n            ModelTemperature: configStore.settings.textModel.params.temperature\r\n        });\r\n\r\n        const messages = reactive([]);\r\n        const userInput = ref('');\r\n        const isLoading = ref(false);\r\n        const messagesContainer = ref(null);\r\n        const currentAIResponse = ref(null); // 跟踪当前AI响应\r\n        const containerWidth = ref(props.width);\r\n        const containerHeight = ref(props.height);\r\n        const showPreview = ref(false); // 控制图片全屏预览显示\r\n        const selectedImage = ref(null); // 存储选中的图片数据\r\n        const imageInput = ref(null);\r\n        \r\n        // 历史记录相关\r\n        const currentSessionId = ref(null);\r\n        const isHistoryCollapsed = ref(false); // 跟踪历史面板折叠状态\r\n\r\n        watch([() => props.width, () => props.height], () => {\r\n            containerWidth.value = props.width;\r\n            containerHeight.value = props.height;\r\n        });\r\n\r\n        const scrollToBottom = () => {\r\n            nextTick(() => {\r\n                if (messagesContainer.value) {\r\n                    messagesContainer.value.scrollTop = messagesContainer.value.scrollHeight;\r\n                }\r\n            });\r\n        };\r\n\r\n        // 历史记录相关函数\r\n        const createSession = (session) => {\r\n            currentSessionId.value = session.id;\r\n            messages.length = 0; // 清空当前消息\r\n            scrollToBottom();\r\n        };\r\n\r\n        const loadSession = (session) => {\r\n            currentSessionId.value = session.id;\r\n            messages.length = 0; // 清空当前消息\r\n            // 加载会话消息\r\n            if (session.messages && session.messages.length > 0) {\r\n                messages.push(...session.messages);\r\n            }\r\n            scrollToBottom();\r\n        };\r\n\r\n        const handleSessionDeleted = (sessionId) => {\r\n            if (currentSessionId.value === sessionId) {\r\n                // 如果删除的是当前会话，清空消息并创建新会话\r\n                messages.length = 0;\r\n                currentSessionId.value = null;\r\n                createNewSession();\r\n            }\r\n        };\r\n\r\n        const handleHistoryCleared = () => {\r\n            messages.length = 0;\r\n            currentSessionId.value = null;\r\n            createNewSession();\r\n        };\r\n\r\n        const createNewSession = () => {\r\n            const newSession = {\r\n                id: Date.now().toString(),\r\n                title: '新对话',\r\n                preview: '开始新的对话...',\r\n                messages: [],\r\n                lastTime: new Date().toISOString(),\r\n                createdAt: new Date().toISOString()\r\n            };\r\n            currentSessionId.value = newSession.id;\r\n        };\r\n\r\n        // 路由跳转函数\r\n        const gotoContinuation = () => {\r\n            router.push('/AIContinuation');\r\n        };\r\n\r\n        const gotoPolishment = () => {\r\n            router.push('/AIPolishment');\r\n        };\r\n\r\n        const gotoExtraction = () => {\r\n            router.push('/AITextExtracts');\r\n        };\r\n\r\n        // 格式化时间戳\r\n        const formatTime = (timestamp) => {\r\n            const date = new Date(timestamp);\r\n            return date.toLocaleTimeString([], { hour: '2-digit', minute: '2-digit' });\r\n        };\r\n\r\n        // 流式处理函数 - 异步生成器\r\n        const processStream = async function*(response) {\r\n            if (!response.ok) {\r\n                const errorData = await response.json();\r\n                throw new Error(errorData.error || `请求失败: ${response.status}`);\r\n            }\r\n\r\n            const reader = response.body.getReader();\r\n            const decoder = new TextDecoder('utf-8');\r\n            let buffer = '';\r\n\r\n            while (true) {\r\n                const { value, done } = await reader.read();\r\n                \r\n                if (done) {\r\n                    break;\r\n                }\r\n\r\n                // 解码并追加数据\r\n                buffer += decoder.decode(value, { stream: true });\r\n                \r\n                // 按行分割处理\r\n                const lines = buffer.split('\\n');\r\n                buffer = lines.pop() || ''; // 保留不完整的行\r\n                \r\n                for (const line of lines) {\r\n                    const trimmedLine = line.trim();\r\n                    if (!trimmedLine.startsWith('data:')) continue;\r\n                    \r\n                    const content = trimmedLine.substring(5).trim();\r\n                    \r\n                    // 处理特殊标记\r\n                    if (content === '[DONE]') {\r\n                        yield { type: 'done' };\r\n                        continue;\r\n                    }\r\n                    \r\n                    // 处理错误\r\n                    if (content.includes('error')) {\r\n                        try {\r\n                            const error = JSON.parse(content);\r\n                            throw new Error(error.error || '未知错误');\r\n                        } catch {\r\n                            throw new Error(content);\r\n                        }\r\n                    }\r\n                    \r\n                    // 解析内容并返回\r\n                    yield { type: 'content', data: content };\r\n                }\r\n            }\r\n        };\r\n        \r\n        // 新增：API Key校验函数\r\n        const validateAPIKey = () => {\r\n            const apiKey = config.value.apiKey;\r\n            \r\n            // 检查是否存在API Key\r\n            if (!apiKey) {\r\n                return {\r\n                    valid: false,\r\n                    message: 'API Key未设置，请先配置API密钥'\r\n                };\r\n            }\r\n            \r\n            // 检查是否为有效字符串\r\n            if (typeof apiKey !== 'string' || apiKey.trim() === '') {\r\n                return {\r\n                    valid: false,\r\n                    message: 'API Key格式不正确，请检查输入'\r\n                };\r\n            }\r\n            \r\n            // 示例：根据常见API Key格式进行长度检查（可根据实际API要求调整）\r\n            if (apiKey.length < 10) {\r\n                return {\r\n                    valid: false,\r\n                    message: 'API Key长度过短，可能无效'\r\n                };\r\n            }\r\n            \r\n            return { valid: true };\r\n        };\r\n\r\n        const sendMessage = async () => {\r\n            if (!userInput.value.trim() || isLoading.value) return;\r\n\r\n            // 如果没有当前会话，创建一个新会话\r\n            if (!currentSessionId.value) {\r\n                createNewSession();\r\n            }\r\n\r\n            const userMessage = userInput.value.trim();\r\n            userInput.value = '';\r\n\r\n            // 添加用户消息\r\n            messages.push({\r\n                sender: 'user',\r\n                content: userMessage,\r\n                timestamp: new Date()\r\n            });\r\n\r\n            // 添加AI消息占位符\r\n            const aiMessageRef = {\r\n                sender: 'ai',\r\n                content: '',\r\n                loading: true,\r\n                timestamp: new Date(),\r\n                showContinuation: false,\r\n                showPolishment: false,\r\n                showExtraction: false,\r\n            };\r\n            messages.push(aiMessageRef);\r\n            currentAIResponse.value = aiMessageRef;\r\n\r\n            scrollToBottom();\r\n            isLoading.value = true;\r\n            \r\n            // api配置校验\r\n            const validationResult = validateAPIKey();\r\n            if (!validationResult.valid) {\r\n                // 校验失败处理\r\n                isLoading.value = false;\r\n                currentAIResponse.value.content = validationResult.message;\r\n                currentAIResponse.value.loading = false;\r\n                return;\r\n            }\r\n\r\n            const historyMessages = messages.slice(0, -2);\r\n            \r\n            // 1. 先调用分类接口\r\n            try {\r\n                aiMessageRef.loading = false;\r\n                // 构建分类请求体\r\n                let classifyRequestBody;\r\n                \r\n                if (selectedImage.value) {\r\n                    // 有图片时包含图片数据\r\n                    classifyRequestBody = {\r\n                        config: config.value,\r\n                        content: historyMessages,\r\n                        ContentRequest: userMessage,\r\n                        image: selectedImage.value\r\n                    };\r\n                } else {\r\n                    // 没有图片时不包含image字段\r\n                    classifyRequestBody = {\r\n                        config: config.value,\r\n                        content: historyMessages,\r\n                        ContentRequest: userMessage\r\n                    };\r\n                }\r\n                \r\n                // 调用分类接口\r\n                const classifyResponse = await fetch('http://localhost:5000/api/dialog/classify', {\r\n                    method: 'POST',\r\n                    headers: { 'Content-Type': 'application/json' },\r\n                    body: JSON.stringify(classifyRequestBody)\r\n                });\r\n                \r\n                if (!classifyResponse.ok) {\r\n                    throw new Error(`分类接口请求失败: ${classifyResponse.status}`);\r\n                }\r\n                \r\n                // 解析分类结果\r\n                const classifyResult = await classifyResponse.json();\r\n                console.log(\"分类结果:\", classifyResult);\r\n                \r\n                // 根据分类结果设置显示标志\r\n                aiMessageRef.showContinuation = classifyResult.TextContinuation || false;\r\n                aiMessageRef.showPolishment = classifyResult.TextPolishment || false;\r\n                aiMessageRef.showExtraction = classifyResult.Extraction || false;\r\n                \r\n            } catch (classifyError) {\r\n                console.error(\"分类接口调用失败:\", classifyError);\r\n                // 分类失败时使用默认值（不显示任何功能按钮）\r\n                aiMessageRef.showContinuation = false;\r\n                aiMessageRef.showPolishment = false;\r\n                aiMessageRef.showExtraction = false;\r\n            }\r\n\r\n            // 2. 调用对话接口\r\n            const requestBody = {\r\n                config: config.value,\r\n                title: '用户对话',\r\n                content: historyMessages,\r\n                ContentRequest: userMessage,\r\n                image: selectedImage.value // 包含图片数据\r\n            };\r\n\r\n            try {\r\n                aiMessageRef.loading = false;\r\n                // 使用setTimeout让出主线程，给DOM更新机会\r\n                await new Promise(resolve => setTimeout(resolve, 0));\r\n\r\n                // 根据是否有图片选择不同的API端点\r\n                let apiEndpoint;\r\n                let requestData;\r\n                \r\n                if (selectedImage.value) {\r\n                    // 有图片时使用多模态API\r\n                    apiEndpoint = '/api/dialog/multimodal';\r\n                    requestData = requestBody;\r\n                } else {\r\n                    // 没有图片时使用普通API，不包含image字段\r\n                    apiEndpoint = '/api/dialog';\r\n                    requestData = {\r\n                        config: config.value,\r\n                        title: '用户对话',\r\n                        content: historyMessages,\r\n                        ContentRequest: userMessage\r\n                    };\r\n                }\r\n                \r\n                const response = await fetch(`http://localhost:5000${apiEndpoint}`, {\r\n                    method: 'POST',\r\n                    headers: { 'Content-Type': 'application/json' },\r\n                    body: JSON.stringify(requestData)\r\n                });\r\n\r\n                // 使用异步生成器处理流式响应\r\n                for await (const chunk of processStream(response)) {\r\n                    if (!currentAIResponse.value) break; // 防止组件卸载后的无效操作\r\n                    \r\n                    switch (chunk.type) {\r\n                        case 'content':\r\n                            try {\r\n                                const parsed = JSON.parse(chunk.data);\r\n                                if (parsed.choices?.[0]?.delta?.content) {\r\n                                    const textChunk = parsed.choices[0].delta.content;\r\n                                    currentAIResponse.value.content += textChunk;\r\n                                } else {\r\n                                    currentAIResponse.value.content += chunk.data;\r\n                                }\r\n                            } catch (e) {\r\n                                currentAIResponse.value.content += chunk.data;\r\n                            }\r\n                            scrollToBottom();\r\n                            break;\r\n                            \r\n                        case 'done':\r\n                            currentAIResponse.value.loading = false;\r\n                            break;\r\n                    }\r\n                }\r\n            } catch (error) {\r\n                console.error('对话错误:', error);\r\n                if (currentAIResponse.value) {\r\n                    currentAIResponse.value.content = `请求失败: ${error.message}`;\r\n                    currentAIResponse.value.loading = false;\r\n                }\r\n            } finally {\r\n                isLoading.value = false;\r\n                currentAIResponse.value = null;\r\n                selectedImage.value = null; // 清空选中的图片\r\n                showPreview.value = false; // 隐藏预览\r\n                scrollToBottom();\r\n            }\r\n        };\r\n\r\n        onMounted(() => {\r\n            // 组件挂载时创建新会话\r\n            createNewSession();\r\n            scrollToBottom();\r\n        });\r\n\r\n        watch(messages, scrollToBottom, { deep: true });\r\n\r\n        // 语音播放相关\r\n        const currentPlayingVoice = ref(null);\r\n        \r\n        // 播放语音函数\r\n        const playVoice = async (msg) => {\r\n            // 如果有正在播放的语音，先停止\r\n            if (currentPlayingVoice.value) {\r\n                currentPlayingVoice.value.pause();\r\n                currentPlayingVoice.value = null;\r\n            }\r\n            \r\n            try {\r\n                // 调用后端代理API\r\n                const response = await fetch('http://localhost:5000/api/AIread', {\r\n                    method: 'POST',\r\n                    headers: { 'Content-Type': 'application/json' },\r\n                    body: JSON.stringify({\r\n                        text: msg.content,\r\n                        apiKey: config.value.apiKey,\r\n                    })\r\n                });\r\n                \r\n                if (!response.ok) {\r\n                    throw new Error(`语音API请求失败: ${response.status}`);\r\n                }\r\n                \r\n                // 处理二进制音频响应\r\n                const audioBlob = await response.blob();\r\n                const audioUrl = URL.createObjectURL(audioBlob);\r\n                \r\n                // 创建并播放音频\r\n                const audio = new Audio(audioUrl);\r\n                currentPlayingVoice.value = audio;\r\n                \r\n                audio.play();\r\n                \r\n                // 播放完成后清理\r\n                audio.onended = () => {\r\n                    currentPlayingVoice.value = null;\r\n                    URL.revokeObjectURL(audioUrl);\r\n                };\r\n                \r\n            } catch (error) {\r\n                console.error('语音播放错误:', error);\r\n                alert(`语音播放失败: ${error.message}`);\r\n            }\r\n        };\r\n\r\n        // 图片输入相关\r\n        const triggerImageUpload = () => {\r\n            imageInput.value.click();\r\n        };\r\n\r\n        const handleImageUpload = async (event) => {\r\n            const file = event.target.files[0];\r\n            if (!file) return;\r\n\r\n            // 验证文件类型\r\n            if (!file.type.startsWith('image/')) {\r\n                alert('请选择图片文件');\r\n                return;\r\n            }\r\n\r\n            // 验证文件大小（5MB限制）\r\n            if (file.size > 5 * 1024 * 1024) {\r\n                alert('图片大小不能超过5MB');\r\n                return;\r\n            }\r\n\r\n            try {\r\n                // 将图片转换为base64格式\r\n                const base64 = await fileToBase64(file);\r\n                selectedImage.value = {\r\n                    data: base64,\r\n                    type: file.type,\r\n                    name: file.name\r\n                };\r\n                \r\n                // 在输入框中显示图片已选择\r\n                const imageText = `[已选择图片: ${file.name}]`;\r\n                if (userInput.value.trim()) {\r\n                    userInput.value += '\\n' + imageText;\r\n                } else {\r\n                    userInput.value = imageText;\r\n                }\r\n                \r\n            } catch (error) {\r\n                console.error('图片处理错误:', error);\r\n                alert(`图片处理失败: ${error.message}`);\r\n            } finally {\r\n                // 清空文件输入\r\n                if (imageInput.value) {\r\n                    imageInput.value.value = '';\r\n                }\r\n            }\r\n        };\r\n\r\n        // 将文件转换为base64格式\r\n        const fileToBase64 = (file) => {\r\n            return new Promise((resolve, reject) => {\r\n                const reader = new FileReader();\r\n                reader.readAsDataURL(file);\r\n                reader.onload = () => {\r\n                    // 移除data:image/xxx;base64,前缀，只保留base64数据\r\n                    const base64 = reader.result.split(',')[1];\r\n                    resolve(base64);\r\n                };\r\n                reader.onerror = error => reject(error);\r\n            });\r\n        };\r\n\r\n        // 图片预览功能\r\n        const showImagePreview = () => {\r\n            showPreview.value = true;\r\n        };\r\n\r\n        const hideImagePreview = () => {\r\n            showPreview.value = false;\r\n        };\r\n\r\n        // 移除图片功能\r\n        const removeImage = () => {\r\n            selectedImage.value = null;\r\n            showPreview.value = false; // 隐藏预览\r\n            // 清空输入框中的图片提示文本\r\n            userInput.value = userInput.value.replace(/\\[已选择图片: .*?\\]\\n?/g, '').trim();\r\n        };\r\n\r\n        // 处理历史面板折叠状态变化\r\n        const handleHistoryToggle = (collapsed) => {\r\n            isHistoryCollapsed.value = collapsed;\r\n        };\r\n\r\n        // 计算输入框宽度\r\n        const inputAreaWidth = computed(() => {\r\n            // 检查是否在浏览器环境中\r\n            if (typeof window !== 'undefined' && window.innerWidth <= 768) {\r\n                return '100%';\r\n            }\r\n            return isHistoryCollapsed.value ? '100%' : '100%';\r\n        });\r\n\r\n        return {\r\n            messages,\r\n            userInput,\r\n            isLoading,\r\n            messagesContainer,\r\n            sendMessage,\r\n            containerWidth,\r\n            containerHeight,\r\n            formatTime,\r\n            gotoContinuation,\r\n            gotoPolishment,\r\n            gotoExtraction,\r\n            playVoice,\r\n            imageInput,\r\n            triggerImageUpload,\r\n            handleImageUpload,\r\n            selectedImage,\r\n            showPreview,\r\n            showImagePreview,\r\n            hideImagePreview,\r\n            removeImage,\r\n            // 历史记录相关\r\n            currentSessionId,\r\n            createSession,\r\n            loadSession,\r\n            handleSessionDeleted,\r\n            handleHistoryCleared,\r\n            handleHistoryToggle,\r\n            inputAreaWidth,\r\n        };\r\n    }\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n/* 新增布局样式 */\r\n.chat-layout {\r\n    display: flex;\r\n    width: 100%;\r\n    height: 100vh;\r\n    min-height: 0;\r\n}\r\n\r\n/* 基础布局与容器样式 */\r\n.chat-container {\r\n    flex: 1;\r\n    display: flex;\r\n    flex-direction: column;\r\n    border-radius: 16px;\r\n    overflow: hidden;\r\n    box-shadow: 0 10px 25px -5px rgba(0, 0, 0, 0.1), 0 8px 10px -6px rgba(0, 0, 0, 0.05);\r\n    background-color: #ffffff;\r\n    min-width: 280px;\r\n    max-width: 100%;\r\n    min-height: 0;\r\n    height: 100%;\r\n    position: relative;\r\n}\r\n\r\n/* 消息区域样式 */\r\n.messages {\r\n    flex: 1;\r\n    min-height: 0;\r\n    overflow-y: auto;\r\n    padding: 1% 2%;\r\n    background-color: #f9fafb;\r\n    display: flex;\r\n    flex-direction: column;\r\n}\r\n\r\n/* 滚动条美化 */\r\n.messages::-webkit-scrollbar {\r\n    width: 6px;\r\n}\r\n\r\n.messages::-webkit-scrollbar-track {\r\n    background: #f1f1f1;\r\n    border-radius: 10px;\r\n}\r\n\r\n.messages::-webkit-scrollbar-thumb {\r\n    background: #c1c1c1;\r\n    border-radius: 10px;\r\n}\r\n\r\n.messages::-webkit-scrollbar-thumb:hover {\r\n    background: #a8a8a8;\r\n}\r\n\r\n/* 消息气泡基础样式 */\r\n.message {\r\n    margin-bottom: 6px;\r\n    padding: 6px 12px;\r\n    border-radius: 16px;\r\n    max-width: 75%;\r\n    word-wrap: break-word;\r\n    position: relative;\r\n    animation: fadeIn 0.3s ease-out;\r\n    font-size: 0.96rem;\r\n}\r\n\r\n/* 消息进入动画 */\r\n@keyframes fadeIn {\r\n    from {\r\n        opacity: 0;\r\n        transform: translateY(10px);\r\n    }\r\n\r\n    to {\r\n        opacity: 1;\r\n        transform: translateY(0);\r\n    }\r\n}\r\n\r\n/* 用户消息样式 */\r\n.user {\r\n    margin-left: auto;\r\n    background: linear-gradient(135deg, #4080ff, #1890ff);\r\n    color: white;\r\n    border-bottom-right-radius: 6px;\r\n    box-shadow: 0 4px 12px rgba(24, 144, 255, 0.3);\r\n}\r\n\r\n/* AI消息样式 */\r\n.ai {\r\n    margin-right: auto;\r\n    background-color: #f5f5f5;\r\n    border-bottom-left-radius: 6px;\r\n    box-shadow: 0 4px 12px rgba(0, 0, 0, 0.05);\r\n}\r\n\r\n/* 消息内容样式 */\r\n.message-content {\r\n    line-height: 1.3;\r\n    position: relative;\r\n    display: flex;\r\n    flex-direction: column;\r\n}\r\n\r\n/* 用户名样式 */\r\n.username {\r\n    font-weight: 600;\r\n    margin-right: 4px;\r\n    display: block;\r\n    font-size: 0.8rem;\r\n    opacity: 0.7;\r\n    text-align: left;\r\n    margin-bottom: 2px;\r\n}\r\n\r\n/* 时间戳样式 */\r\n.timestamp {\r\n    font-size: 0.65rem;\r\n    color: #b0b0b0;\r\n    margin-top: 2px;\r\n    display: block;\r\n    text-align: right;\r\n}\r\n\r\n/* 输入区域样式 */\r\n/* 输入区域样式 */\r\n.input-area {\r\n    display: flex;\r\n    flex-direction: column;\r\n    padding: 0.5% 2%;\r\n    border-top: 1px solid #e5e7eb;\r\n    background-color: white;\r\n    box-sizing: border-box;\r\n    width: 100%;\r\n    z-index: 10;\r\n    box-shadow: 0 -2px 10px rgba(0, 0, 0, 0.05);\r\n    transition: width 0.3s ease;\r\n}\r\n\r\n/* 输入按钮组样式 - 调整为靠右排列 */\r\n.input-buttons {\r\n    display: flex;\r\n    align-items: center;\r\n    gap: 8px;\r\n    justify-content: flex-end; /* 添加靠右排列 */\r\n    margin-top: 8px; /* 保持与文本框的间距 */\r\n}\r\n\r\n/* 响应式设计中的输入框调整 */\r\n@media (max-width: 768px) {\r\n    .input-area {\r\n        position: relative;\r\n        bottom: auto;\r\n        right: auto;\r\n    }\r\n    \r\n    /* 小屏幕上按钮可能需要调整间距 */\r\n    .input-buttons {\r\n        gap: 4px;\r\n    }\r\n}\r\n/* 文本输入框样式 */\r\ntextarea {\r\n    flex: 1;\r\n    padding: 6px 12px;\r\n    border: 1px solid #d1d5db;\r\n    border-radius: 16px;\r\n    resize: none;\r\n    font-family: -apple-system, BlinkMacSystemFont, \"Segoe UI\", Roboto, Helvetica, Arial, sans-serif;\r\n    font-size: 1rem;\r\n    line-height: 1.4;\r\n    transition: border-color 0.2s, box-shadow 0.2s;\r\n    box-sizing: border-box;\r\n}\r\n\r\ntextarea:focus {\r\n    outline: none;\r\n    border-color: #1890ff;\r\n    box-shadow: 0 0 0 3px rgba(24, 144, 255, 0.2);\r\n}\r\n\r\n/* 图片上传按钮样式 */\r\n.image-upload-btn {\r\n    padding: 8px 12px;\r\n    background: linear-gradient(135deg, #52c41a, #389e0d);\r\n    color: white;\r\n    border: none;\r\n    border-radius: 14px;\r\n    cursor: pointer;\r\n    font-weight: 600;\r\n    font-size: 0.85rem;\r\n    transition: all 0.2s ease;\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n    box-sizing: border-box;\r\n}\r\n\r\n.image-upload-btn:hover:not(:disabled) {\r\n    background: linear-gradient(135deg, #49aa19, #2f7a0a);\r\n    box-shadow: 0 4px 12px rgba(82, 196, 26, 0.3);\r\n    transform: translateY(-1px);\r\n}\r\n\r\n.image-upload-btn:active:not(:disabled) {\r\n    transform: translateY(1px);\r\n    box-shadow: 0 2px 6px rgba(82, 196, 26, 0.2);\r\n}\r\n\r\n.image-upload-btn:disabled {\r\n    background-color: #f6ffed;\r\n    color: #b7eb8f;\r\n    cursor: not-allowed;\r\n    box-shadow: none;\r\n    transform: none;\r\n}\r\n\r\n.image-upload-btn i {\r\n    font-size: 0.9rem;\r\n}\r\n\r\n/* 发送按钮样式 */\r\nbutton {\r\n    padding: 8px 14px;\r\n    background: linear-gradient(135deg, #4080ff, #1890ff);\r\n    color: white;\r\n    border: none;\r\n    border-radius: 14px;\r\n    cursor: pointer;\r\n    font-weight: 600;\r\n    font-size: 0.85rem;\r\n    transition: all 0.2s ease;\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n    box-sizing: border-box;\r\n}\r\n\r\nbutton:hover:not(:disabled) {\r\n    background: linear-gradient(135deg, #3170e0, #1880d0);\r\n    box-shadow: 0 4px 12px rgba(24, 144, 255, 0.3);\r\n    transform: translateY(-1px);\r\n}\r\n\r\nbutton:active:not(:disabled) {\r\n    transform: translateY(1px);\r\n    box-shadow: 0 2px 6px rgba(24, 144, 255, 0.2);\r\n}\r\n\r\nbutton:disabled {\r\n    background-color: #e5edff;\r\n    color: #94b3ff;\r\n    cursor: not-allowed;\r\n    box-shadow: none;\r\n    transform: none;\r\n}\r\n\r\n/* 加载状态动画优化 */\r\n.loading-dots {\r\n    display: inline-block;\r\n    position: relative;\r\n    width: 5vw;\r\n    /* 使用视口宽度单位 */\r\n    height: 3vw;\r\n    /* 使用视口宽度单位 */\r\n}\r\n\r\n.loading-dots::after {\r\n    content: '';\r\n    position: absolute;\r\n    width: 100%;\r\n    height: 100%;\r\n    margin: auto;\r\n    top: 0;\r\n    bottom: 0;\r\n    left: 0;\r\n    right: 0;\r\n    border-radius: 50%;\r\n    border: 3px solid #1890ff;\r\n    border-top-color: transparent;\r\n    animation: spin 1s linear infinite;\r\n}\r\n\r\n@keyframes spin {\r\n    to {\r\n        transform: rotate(360deg);\r\n    }\r\n}\r\n\r\n/* 响应式设计优化 */\r\n@media (max-width: 640px) {\r\n    .chat-layout {\r\n        flex-direction: column;\r\n        height: 100%;\r\n    }\r\n    \r\n    .chat-container {\r\n        border-radius: 0;\r\n        height: 100%;\r\n        flex: 1;\r\n    }\r\n}\r\n\r\n@media (max-width: 768px) {\r\n    .input-area {\r\n        position: relative;\r\n        bottom: auto;\r\n        right: auto;\r\n    }\r\n}\r\n\r\n/* 用户消息(\"我\")标签居右 */\r\n.user .username {\r\n    text-align: right;\r\n    margin-left: auto;\r\n    /* 右对齐辅助 */\r\n}\r\n\r\n/* AI消息(\"严小希\")标签居左 */\r\n.ai .username {\r\n    text-align: left;\r\n    margin-right: auto;\r\n    /* 左对齐辅助 */\r\n}\r\n\r\n/* 时间戳对齐优化 */\r\n.user .timestamp {\r\n    text-align: left;\r\n    /* 用户消息时间戳居左 */\r\n}\r\n\r\n.ai .timestamp {\r\n    text-align: right;\r\n    /* AI消息时间戳居右 */\r\n}\r\n\r\n/* 优化消息内容布局 */\r\n.message-content {\r\n    line-height: 1.6;\r\n    position: relative;\r\n    display: flex;\r\n    flex-direction: column;\r\n}\r\n\r\n/*续写功能跳转条*/\r\n.continuation-bar {\r\n    margin-top: 12px;\r\n    text-align: center;\r\n    width: 100%;\r\n    display: flex;\r\n    flex-direction: column;\r\n    align-items: center;\r\n}\r\n\r\n.divider {\r\n    width: 100%;\r\n    height: 1px;\r\n    background: linear-gradient(to right, transparent, #d1d5db, transparent);\r\n    margin-bottom: 10px;\r\n}\r\n\r\n.continuation-btn {\r\n    background: transparent;\r\n    border: 1px solid #1890ff;\r\n    color: #1890ff;\r\n    border-radius: 16px;\r\n    padding: 3px 12px;\r\n    font-size: 0.8rem;\r\n    transition: all 0.2s;\r\n    margin-top: 5px;\r\n    cursor: pointer;\r\n}\r\n\r\n.continuation-btn:hover {\r\n    background-color: #1890ff;\r\n    color: white;\r\n    box-shadow: 0 2px 6px rgba(24, 144, 255, 0.3);\r\n    transform: translateY(-1px);\r\n}\r\n\r\n/* 语音播放按钮样式 */\r\n.voice-play-btn {\r\n    background: none;\r\n    border: none;\r\n    color: #6b7280;\r\n    cursor: pointer;\r\n    padding: 2px 6px;\r\n    border-radius: 4px;\r\n    margin-right: 8px;\r\n    transition: all 0.2s;\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n}\r\n\r\n.voice-play-btn:hover {\r\n    background-color: #e5edff;\r\n    color: #1890ff;\r\n}\r\n\r\n.voice-play-btn i {\r\n    font-size: 0.9rem;\r\n}\r\n\r\n/* 响应式设计中调整按钮大小 */\r\n@media (max-width: 640px) {\r\n    .voice-play-btn {\r\n        padding: 1px 4px;\r\n        margin-right: 5px;\r\n    }\r\n    \r\n    .voice-play-btn i {\r\n        font-size: 0.8rem;\r\n    }\r\n}\r\n\r\n/* 图片预览区域样式 */\r\n.image-preview-area {\r\n    background: linear-gradient(135deg, #f0f9ff, #e0f2fe);\r\n    border-bottom: 1px solid #e5e7eb;\r\n    padding: 12px 16px;\r\n    display: flex;\r\n    flex-direction: column;\r\n    gap: 8px;\r\n}\r\n\r\n.image-preview-header {\r\n    display: flex;\r\n    justify-content: space-between;\r\n    align-items: center;\r\n}\r\n\r\n.image-preview-title {\r\n    font-size: 0.85rem;\r\n    font-weight: 600;\r\n    color: #1e40af;\r\n}\r\n\r\n.remove-image-btn {\r\n    background: none;\r\n    border: none;\r\n    color: #ef4444;\r\n    cursor: pointer;\r\n    padding: 4px 8px;\r\n    border-radius: 6px;\r\n    transition: all 0.2s;\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n}\r\n\r\n.remove-image-btn:hover {\r\n    background-color: #fef2f2;\r\n    color: #dc2626;\r\n}\r\n\r\n.remove-image-btn i {\r\n    font-size: 0.8rem;\r\n}\r\n\r\n.image-preview-content {\r\n    display: flex;\r\n    justify-content: center;\r\n}\r\n\r\n.image-thumbnail-container {\r\n    position: relative;\r\n    width: 100px;\r\n    height: 100px;\r\n    border-radius: 8px;\r\n    overflow: hidden;\r\n    cursor: pointer;\r\n    transition: all 0.3s ease;\r\n    box-shadow: 0 2px 8px rgba(0, 0, 0, 0.1);\r\n}\r\n\r\n.image-thumbnail-container:hover {\r\n    transform: scale(1.05);\r\n    box-shadow: 0 4px 16px rgba(0, 0, 0, 0.2);\r\n}\r\n\r\n.image-thumbnail {\r\n    width: 100%;\r\n    height: 100%;\r\n    object-fit: cover;\r\n    transition: all 0.3s ease;\r\n}\r\n\r\n.image-overlay {\r\n    position: absolute;\r\n    top: 0;\r\n    left: 0;\r\n    width: 100%;\r\n    height: 100%;\r\n    background: rgba(0, 0, 0, 0.6);\r\n    display: flex;\r\n    flex-direction: column;\r\n    align-items: center;\r\n    justify-content: center;\r\n    border-radius: 8px;\r\n    opacity: 0;\r\n    transition: opacity 0.3s ease;\r\n}\r\n\r\n.image-thumbnail-container:hover .image-overlay {\r\n    opacity: 1;\r\n}\r\n\r\n.image-overlay i {\r\n    color: white;\r\n    font-size: 1.2rem;\r\n    margin-bottom: 4px;\r\n}\r\n\r\n.image-filename {\r\n    color: white;\r\n    font-size: 0.7rem;\r\n    text-align: center;\r\n    max-width: 90px;\r\n    overflow: hidden;\r\n    text-overflow: ellipsis;\r\n    white-space: nowrap;\r\n}\r\n\r\n/* 响应式设计中的图片预览区域 */\r\n@media (max-width: 640px) {\r\n    .image-preview-area {\r\n        padding: 8px 12px;\r\n    }\r\n    \r\n    .image-thumbnail-container {\r\n        width: 80px;\r\n        height: 80px;\r\n    }\r\n    \r\n    .image-filename {\r\n        max-width: 70px;\r\n        font-size: 0.65rem;\r\n    }\r\n    \r\n    .image-preview-title {\r\n        font-size: 0.8rem;\r\n    }\r\n    \r\n    .image-preview-modal {\r\n        max-width: 95%;\r\n        max-height: 95%;\r\n    }\r\n    \r\n    .image-preview-modal-header {\r\n        padding: 12px 16px;\r\n    }\r\n    \r\n    .image-preview-modal-title {\r\n        font-size: 1rem;\r\n        max-width: 200px;\r\n    }\r\n    \r\n    .image-preview-modal-content {\r\n        padding: 16px;\r\n        max-height: 60vh;\r\n    }\r\n}\r\n\r\n/* 图片全屏预览遮罩 */\r\n.image-preview-overlay {\r\n    position: fixed;\r\n    top: 0;\r\n    left: 0;\r\n    width: 100%;\r\n    height: 100%;\r\n    background: rgba(0, 0, 0, 0.8);\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n    z-index: 1000;\r\n    animation: fadeIn 0.3s ease;\r\n}\r\n\r\n.image-preview-modal {\r\n    background: white;\r\n    border-radius: 12px;\r\n    max-width: 90%;\r\n    max-height: 90%;\r\n    overflow: hidden;\r\n    box-shadow: 0 20px 40px rgba(0, 0, 0, 0.3);\r\n    animation: slideIn 0.3s ease;\r\n}\r\n\r\n@keyframes slideIn {\r\n    from {\r\n        opacity: 0;\r\n        transform: scale(0.8);\r\n    }\r\n    to {\r\n        opacity: 1;\r\n        transform: scale(1);\r\n    }\r\n}\r\n\r\n.image-preview-modal-header {\r\n    display: flex;\r\n    justify-content: space-between;\r\n    align-items: center;\r\n    padding: 16px 20px;\r\n    border-bottom: 1px solid #e5e7eb;\r\n    background: #f9fafb;\r\n}\r\n\r\n.image-preview-modal-title {\r\n    font-size: 1.1rem;\r\n    font-weight: 600;\r\n    color: #374151;\r\n    max-width: 300px;\r\n    overflow: hidden;\r\n    text-overflow: ellipsis;\r\n    white-space: nowrap;\r\n}\r\n\r\n.close-preview-btn {\r\n    background: none;\r\n    border: none;\r\n    color: #6b7280;\r\n    cursor: pointer;\r\n    padding: 8px;\r\n    border-radius: 6px;\r\n    transition: all 0.2s;\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n}\r\n\r\n.close-preview-btn:hover {\r\n    background-color: #f3f4f6;\r\n    color: #374151;\r\n}\r\n\r\n.close-preview-btn i {\r\n    font-size: 1.2rem;\r\n}\r\n\r\n.image-preview-modal-content {\r\n    padding: 20px;\r\n    text-align: center;\r\n    max-height: 70vh;\r\n    overflow: auto;\r\n}\r\n\r\n.image-preview-full {\r\n    max-width: 100%;\r\n    max-height: 100%;\r\n    object-fit: contain;\r\n    border-radius: 8px;\r\n    box-shadow: 0 4px 12px rgba(0, 0, 0, 0.1);\r\n}\r\n</style>","<template>\r\n    <div class=\"history-panel\" :class=\"{ 'collapsed': isCollapsed }\">\r\n        <!-- 历史记录头部 -->\r\n        <div class=\"history-header\">\r\n            <div class=\"history-title\">\r\n                <i class=\"fas fa-history\"></i>\r\n                <span>对话历史</span>\r\n            </div>\r\n            <div class=\"history-controls\">\r\n                <button @click=\"clearHistory\" class=\"clear-btn\" title=\"清空历史记录\">\r\n                    <i class=\"fas fa-trash\"></i>\r\n                </button>\r\n                <button @click=\"toggleCollapse\" class=\"collapse-btn\" title=\"收起/展开\">\r\n                    <i :class=\"isCollapsed ? 'fas fa-chevron-right' : 'fas fa-chevron-left'\"></i>\r\n                </button>\r\n            </div>\r\n        </div>\r\n\r\n        <!-- 历史记录列表 -->\r\n        <div v-if=\"!isCollapsed\" class=\"history-list\">\r\n            <div v-if=\"historyList.length === 0\" class=\"empty-history\">\r\n                <i class=\"fas fa-comments\"></i>\r\n                <p>暂无对话记录</p>\r\n                <span>开始和严小希对话吧！</span>\r\n            </div>\r\n            \r\n            <div v-else class=\"history-items\">\r\n                <div \r\n                    v-for=\"(session, index) in historyList\" \r\n                    :key=\"session.id\"\r\n                    :class=\"['history-item', { 'active': currentSessionId === session.id }]\"\r\n                    @click=\"selectSession(session)\"\r\n                >\r\n                    <div class=\"session-header\">\r\n                        <div class=\"session-title\">\r\n                            <i class=\"fas fa-comment-dots\"></i>\r\n                            <span>{{ session.title || '对话' + (index + 1) }}</span>\r\n                        </div>\r\n                        <div class=\"session-time\">{{ formatDate(session.lastTime) }}</div>\r\n                    </div>\r\n                    <div class=\"session-preview\">\r\n                        <span class=\"preview-text\">{{ session.preview }}</span>\r\n                    </div>\r\n                    <div class=\"session-actions\">\r\n                        <button @click.stop=\"deleteSession(session.id)\" class=\"delete-session-btn\" title=\"删除此对话\">\r\n                            <i class=\"fas fa-times\"></i>\r\n                        </button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n\r\n        <!-- 新建对话按钮 -->\r\n        <div v-if=\"!isCollapsed\" class=\"new-chat-section\">\r\n            <button @click=\"createNewSession\" class=\"new-chat-btn\">\r\n                <i class=\"fas fa-plus\"></i>\r\n                <span>新建对话</span>\r\n            </button>\r\n        </div>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\nimport { ref, watch } from 'vue';\r\n\r\nexport default {\r\n    name: 'HistoryPanel',\r\n    props: {\r\n        messages: {\r\n            type: Array,\r\n            default: () => []\r\n        },\r\n        currentSessionId: {\r\n            type: String,\r\n            default: null\r\n        }\r\n    },\r\n    emits: ['session-selected', 'session-created', 'session-deleted', 'history-cleared', 'toggle-collapse'],\r\n    setup(props, { emit }) {\r\n        const isCollapsed = ref(false);\r\n        const historyList = ref([]);\r\n\r\n        // 从localStorage加载历史记录\r\n        const loadHistory = () => {\r\n            try {\r\n                const saved = localStorage.getItem('yanxx_chat_history');\r\n                if (saved) {\r\n                    historyList.value = JSON.parse(saved);\r\n                }\r\n            } catch (error) {\r\n                console.error('加载历史记录失败:', error);\r\n                historyList.value = [];\r\n            }\r\n        };\r\n\r\n        // 保存历史记录到localStorage\r\n        const saveHistory = () => {\r\n            try {\r\n                localStorage.setItem('yanxx_chat_history', JSON.stringify(historyList.value));\r\n            } catch (error) {\r\n                console.error('保存历史记录失败:', error);\r\n            }\r\n        };\r\n\r\n        // 创建新的对话会话\r\n        const createNewSession = () => {\r\n            const newSession = {\r\n                id: Date.now().toString(),\r\n                title: '新对话',\r\n                preview: '开始新的对话...',\r\n                messages: [],\r\n                lastTime: new Date().toISOString(),\r\n                createdAt: new Date().toISOString()\r\n            };\r\n            \r\n            historyList.value.unshift(newSession);\r\n            saveHistory();\r\n            emit('session-created', newSession);\r\n        };\r\n\r\n        // 选择对话会话\r\n        const selectSession = (session) => {\r\n            emit('session-selected', session);\r\n        };\r\n\r\n        // 删除对话会话\r\n        const deleteSession = (sessionId) => {\r\n            if (confirm('确定要删除这个对话吗？')) {\r\n                const index = historyList.value.findIndex(s => s.id === sessionId);\r\n                if (index > -1) {\r\n                    historyList.value.splice(index, 1);\r\n                    saveHistory();\r\n                    emit('session-deleted', sessionId);\r\n                }\r\n            }\r\n        };\r\n\r\n        // 清空所有历史记录\r\n        const clearHistory = () => {\r\n            if (confirm('确定要清空所有对话历史吗？此操作不可恢复！')) {\r\n                historyList.value = [];\r\n                saveHistory();\r\n                emit('history-cleared');\r\n            }\r\n        };\r\n\r\n        // 切换折叠状态\r\n        const toggleCollapse = () => {\r\n            isCollapsed.value = !isCollapsed.value;\r\n            emit('toggle-collapse', isCollapsed.value);\r\n        };\r\n\r\n        // 格式化日期\r\n        const formatDate = (dateString) => {\r\n            const date = new Date(dateString);\r\n            const now = new Date();\r\n            const diff = now - date;\r\n            \r\n            // 今天\r\n            if (diff < 24 * 60 * 60 * 1000) {\r\n                return date.toLocaleTimeString([], { hour: '2-digit', minute: '2-digit' });\r\n            }\r\n            // 昨天\r\n            else if (diff < 48 * 60 * 60 * 1000) {\r\n                return '昨天';\r\n            }\r\n            // 一周内\r\n            else if (diff < 7 * 24 * 60 * 60 * 1000) {\r\n                const days = ['周日', '周一', '周二', '周三', '周四', '周五', '周六'];\r\n                return days[date.getDay()];\r\n            }\r\n            // 更早\r\n            else {\r\n                return date.toLocaleDateString();\r\n            }\r\n        };\r\n\r\n        // 更新当前会话\r\n        const updateCurrentSession = () => {\r\n            if (!props.currentSessionId || props.messages.length === 0) return;\r\n            \r\n            const session = historyList.value.find(s => s.id === props.currentSessionId);\r\n            if (session) {\r\n                // 更新会话信息\r\n                session.messages = [...props.messages];\r\n                session.lastTime = new Date().toISOString();\r\n                \r\n                // 生成预览文本\r\n                const lastUserMessage = props.messages\r\n                    .filter(msg => msg.sender === 'user')\r\n                    .pop();\r\n                \r\n                if (lastUserMessage) {\r\n                    session.preview = lastUserMessage.content.length > 30 \r\n                        ? lastUserMessage.content.substring(0, 30) + '...'\r\n                        : lastUserMessage.content;\r\n                }\r\n                \r\n                // 生成标题\r\n                if (props.messages.length >= 2) {\r\n                    const firstUserMessage = props.messages.find(msg => msg.sender === 'user');\r\n                    if (firstUserMessage) {\r\n                        session.title = firstUserMessage.content.length > 20 \r\n                            ? firstUserMessage.content.substring(0, 20) + '...'\r\n                            : firstUserMessage.content;\r\n                    }\r\n                }\r\n                \r\n                // 重新排序，将当前会话移到顶部\r\n                const index = historyList.value.findIndex(s => s.id === props.currentSessionId);\r\n                if (index > 0) {\r\n                    const session = historyList.value.splice(index, 1)[0];\r\n                    historyList.value.unshift(session);\r\n                }\r\n                \r\n                saveHistory();\r\n            }\r\n        };\r\n\r\n        // 监听消息变化，更新当前会话\r\n        watch(() => props.messages, updateCurrentSession, { deep: true });\r\n\r\n        // 组件挂载时加载历史记录\r\n        loadHistory();\r\n\r\n        return {\r\n            isCollapsed,\r\n            historyList,\r\n            createNewSession,\r\n            selectSession,\r\n            deleteSession,\r\n            clearHistory,\r\n            toggleCollapse,\r\n            formatDate\r\n        };\r\n    }\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.history-panel {\r\n    width: 280px;\r\n    height: 100%;\r\n    background: #f8fafc;\r\n    border-right: 1px solid #e2e8f0;\r\n    display: flex;\r\n    flex-direction: column;\r\n    transition: width 0.3s ease;\r\n    overflow: hidden;\r\n}\r\n\r\n.history-panel.collapsed {\r\n    width: 60px;\r\n}\r\n\r\n.history-header {\r\n    display: flex;\r\n    justify-content: space-between;\r\n    align-items: center;\r\n    padding: 16px;\r\n    border-bottom: 1px solid #e2e8f0;\r\n    background: white;\r\n    min-height: 60px;\r\n}\r\n\r\n.history-title {\r\n    display: flex;\r\n    align-items: center;\r\n    gap: 8px;\r\n    font-weight: 600;\r\n    color: #1e293b;\r\n}\r\n\r\n.history-title i {\r\n    color: #3b82f6;\r\n}\r\n\r\n.history-controls {\r\n    display: flex;\r\n    gap: 4px;\r\n}\r\n\r\n.clear-btn, .collapse-btn {\r\n    background: none;\r\n    border: none;\r\n    color: #64748b;\r\n    cursor: pointer;\r\n    padding: 6px;\r\n    border-radius: 6px;\r\n    transition: all 0.2s;\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n}\r\n\r\n.clear-btn:hover, .collapse-btn:hover {\r\n    background: #f1f5f9;\r\n    color: #475569;\r\n}\r\n\r\n.clear-btn i, .collapse-btn i {\r\n    font-size: 0.9rem;\r\n}\r\n\r\n.history-list {\r\n    flex: 1;\r\n    overflow-y: auto;\r\n    padding: 8px;\r\n}\r\n\r\n.empty-history {\r\n    display: flex;\r\n    flex-direction: column;\r\n    align-items: center;\r\n    justify-content: center;\r\n    height: 200px;\r\n    color: #94a3b8;\r\n    text-align: center;\r\n}\r\n\r\n.empty-history i {\r\n    font-size: 2rem;\r\n    margin-bottom: 12px;\r\n    color: #cbd5e1;\r\n}\r\n\r\n.empty-history p {\r\n    margin: 8px 0 4px 0;\r\n    font-weight: 500;\r\n}\r\n\r\n.empty-history span {\r\n    font-size: 0.85rem;\r\n}\r\n\r\n.history-items {\r\n    display: flex;\r\n    flex-direction: column;\r\n    gap: 8px;\r\n}\r\n\r\n.history-item {\r\n    background: white;\r\n    border: 1px solid #e2e8f0;\r\n    border-radius: 8px;\r\n    padding: 12px;\r\n    cursor: pointer;\r\n    transition: all 0.2s;\r\n    position: relative;\r\n}\r\n\r\n.history-item:hover {\r\n    border-color: #3b82f6;\r\n    box-shadow: 0 2px 8px rgba(59, 130, 246, 0.1);\r\n}\r\n\r\n.history-item.active {\r\n    border-color: #3b82f6;\r\n    background: #eff6ff;\r\n}\r\n\r\n.session-header {\r\n    display: flex;\r\n    justify-content: space-between;\r\n    align-items: flex-start;\r\n    margin-bottom: 6px;\r\n}\r\n\r\n.session-title {\r\n    display: flex;\r\n    align-items: center;\r\n    gap: 6px;\r\n    font-weight: 500;\r\n    color: #1e293b;\r\n    flex: 1;\r\n    min-width: 0;\r\n}\r\n\r\n.session-title i {\r\n    color: #3b82f6;\r\n    font-size: 0.8rem;\r\n}\r\n\r\n.session-title span {\r\n    overflow: hidden;\r\n    text-overflow: ellipsis;\r\n    white-space: nowrap;\r\n}\r\n\r\n.session-time {\r\n    font-size: 0.75rem;\r\n    color: #94a3b8;\r\n    white-space: nowrap;\r\n    margin-left: 8px;\r\n}\r\n\r\n.session-preview {\r\n    margin-bottom: 8px;\r\n}\r\n\r\n.preview-text {\r\n    font-size: 0.85rem;\r\n    color: #64748b;\r\n    line-height: 1.4;\r\n    display: -webkit-box;\r\n    -webkit-line-clamp: 2;\r\n    -webkit-box-orient: vertical;\r\n    overflow: hidden;\r\n}\r\n\r\n.session-actions {\r\n    display: flex;\r\n    justify-content: flex-end;\r\n    opacity: 0;\r\n    transition: opacity 0.2s;\r\n}\r\n\r\n.history-item:hover .session-actions {\r\n    opacity: 1;\r\n}\r\n\r\n.delete-session-btn {\r\n    background: none;\r\n    border: none;\r\n    color: #ef4444;\r\n    cursor: pointer;\r\n    padding: 4px;\r\n    border-radius: 4px;\r\n    transition: all 0.2s;\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n}\r\n\r\n.delete-session-btn:hover {\r\n    background: #fef2f2;\r\n    color: #dc2626;\r\n}\r\n\r\n.delete-session-btn i {\r\n    font-size: 0.8rem;\r\n}\r\n\r\n.new-chat-section {\r\n    padding: 16px;\r\n    border-top: 1px solid #e2e8f0;\r\n    background: white;\r\n}\r\n\r\n.new-chat-btn {\r\n    width: 100%;\r\n    background: linear-gradient(135deg, #3b82f6, #1d4ed8);\r\n    color: white;\r\n    border: none;\r\n    border-radius: 8px;\r\n    padding: 12px;\r\n    cursor: pointer;\r\n    font-weight: 500;\r\n    transition: all 0.2s;\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n    gap: 8px;\r\n}\r\n\r\n.new-chat-btn:hover {\r\n    background: linear-gradient(135deg, #2563eb, #1e40af);\r\n    transform: translateY(-1px);\r\n    box-shadow: 0 4px 12px rgba(59, 130, 246, 0.3);\r\n}\r\n\r\n.new-chat-btn i {\r\n    font-size: 0.9rem;\r\n}\r\n\r\n/* 折叠状态样式 */\r\n.history-panel.collapsed .history-title span,\r\n.history-panel.collapsed .history-controls,\r\n.history-panel.collapsed .history-list,\r\n.history-panel.collapsed .new-chat-section {\r\n    display: none;\r\n}\r\n\r\n.history-panel.collapsed .history-header {\r\n    justify-content: center;\r\n    padding: 16px 8px;\r\n}\r\n\r\n.history-panel.collapsed .collapse-btn {\r\n    position: absolute;\r\n    right: 8px;\r\n}\r\n\r\n/* 滚动条样式 */\r\n.history-list::-webkit-scrollbar {\r\n    width: 4px;\r\n}\r\n\r\n.history-list::-webkit-scrollbar-track {\r\n    background: transparent;\r\n}\r\n\r\n.history-list::-webkit-scrollbar-thumb {\r\n    background: #cbd5e1;\r\n    border-radius: 2px;\r\n}\r\n\r\n.history-list::-webkit-scrollbar-thumb:hover {\r\n    background: #94a3b8;\r\n}\r\n\r\n/* 响应式设计 */\r\n@media (max-width: 768px) {\r\n    .history-panel {\r\n        width: 100%;\r\n        height: auto;\r\n        max-height: 300px;\r\n        border-right: none;\r\n        border-bottom: 1px solid #e2e8f0;\r\n    }\r\n    \r\n    .history-panel.collapsed {\r\n        width: 100%;\r\n        max-height: 60px;\r\n    }\r\n}\r\n</style> ","import { render } from \"./HistoryPanel.vue?vue&type=template&id=109a81cf&scoped=true\"\nimport script from \"./HistoryPanel.vue?vue&type=script&lang=js\"\nexport * from \"./HistoryPanel.vue?vue&type=script&lang=js\"\n\nimport \"./HistoryPanel.vue?vue&type=style&index=0&id=109a81cf&scoped=true&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-109a81cf\"]])\n\nexport default __exports__","import { render } from \"./YanxxDialog.vue?vue&type=template&id=4249ad2b&scoped=true\"\nimport script from \"./YanxxDialog.vue?vue&type=script&lang=js\"\nexport * from \"./YanxxDialog.vue?vue&type=script&lang=js\"\n\nimport \"./YanxxDialog.vue?vue&type=style&index=0&id=4249ad2b&scoped=true&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-4249ad2b\"]])\n\nexport default __exports__","import { render } from \"./UserMain.vue?vue&type=template&id=89baa0cc\"\nimport script from \"./UserMain.vue?vue&type=script&lang=js\"\nexport * from \"./UserMain.vue?vue&type=script&lang=js\"\n\nimport \"./UserMain.vue?vue&type=style&index=0&id=89baa0cc&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__"],"names":["$","iterate","aCallable","anObject","getIteratorDirect","target","proto","real","find","predicate","this","record","counter","value","stop","IS_RECORD","INTERRUPTED","result","_createBlock","_component_YanxxDialog","style","class","ref","key","_createElementBlock","_hoisted_1","_createVNode","_component_HistoryPanel","messages","$setup","currentSessionId","onSessionSelected","loadSession","onSessionCreated","createSession","onSessionDeleted","handleSessionDeleted","onHistoryCleared","handleHistoryCleared","onToggleCollapse","handleHistoryToggle","_createElementVNode","_normalizeStyle","width","containerWidth","height","containerHeight","_hoisted_2","_Fragment","_renderList","msg","index","_normalizeClass","sender","_hoisted_3","_createTextVNode","_toDisplayString","content","_hoisted_4","formatTime","timestamp","_hoisted_5","loading","_createCommentVNode","onClick","$event","playVoice","_hoisted_6","_hoisted_7","_hoisted_8","_hoisted_9","showContinuation","_hoisted_10","_cache","args","gotoContinuation","showPolishment","_hoisted_11","gotoPolishment","showExtraction","_hoisted_12","gotoExtraction","selectedImage","_hoisted_13","_hoisted_14","removeImage","title","_hoisted_15","showImagePreview","src","type","data","alt","name","_hoisted_16","_hoisted_17","_hoisted_18","showPreview","hideImagePreview","_withModifiers","_hoisted_19","_hoisted_20","_hoisted_21","_hoisted_22","inputAreaWidth","userInput","placeholder","onKeydown","_withKeys","sendMessage","disabled","isLoading","rows","_hoisted_23","_hoisted_24","triggerImageUpload","_hoisted_25","accept","onChange","handleImageUpload","trim","_hoisted_26","isCollapsed","clearHistory","toggleCollapse","historyList","length","session","id","$props","selectSession","formatDate","lastTime","preview","deleteSession","createNewSession","props","Array","default","String","emits","setup","emit","loadHistory","saved","localStorage","getItem","JSON","parse","error","console","saveHistory","setItem","stringify","newSession","Date","now","toString","toISOString","createdAt","unshift","sessionId","confirm","findIndex","s","splice","dateString","date","diff","toLocaleTimeString","hour","minute","days","getDay","toLocaleDateString","updateCurrentSession","lastUserMessage","filter","pop","substring","firstUserMessage","watch","deep","__exports__","components","HistoryPanel","router","useRouter","configStore","useConfigStore","config","ModelName","settings","textModel","apiKey","apiUrl","ModelTemperature","params","temperature","reactive","messagesContainer","currentAIResponse","imageInput","isHistoryCollapsed","scrollToBottom","nextTick","scrollTop","scrollHeight","push","processStream","async","response","ok","errorData","json","Error","status","reader","body","getReader","decoder","TextDecoder","buffer","done","read","decode","stream","lines","split","line","trimmedLine","startsWith","includes","validateAPIKey","valid","message","userMessage","aiMessageRef","validationResult","historyMessages","slice","classifyRequestBody","ContentRequest","image","classifyResponse","fetch","method","headers","classifyResult","log","TextContinuation","TextPolishment","Extraction","classifyError","requestBody","apiEndpoint","requestData","Promise","resolve","setTimeout","chunk","parsed","choices","delta","textChunk","e","onMounted","currentPlayingVoice","pause","text","audioBlob","blob","audioUrl","URL","createObjectURL","audio","Audio","play","onended","revokeObjectURL","alert","click","file","event","files","size","base64","fileToBase64","imageText","reject","FileReader","readAsDataURL","onload","onerror","replace","collapsed","computed","window","innerWidth","YanxxDialog","render"],"sourceRoot":""}